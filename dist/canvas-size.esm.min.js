/*!
 * canvas-size
 * v1.0.4
 * https://github.com/jhildenbiddle/canvas-size
 * (c) 2015-2020 John Hildenbiddle <http://hildenbiddle.com>
 * MIT license
 */
var t={max:null,min:1,sizes:[],step:1024,onError:Function.prototype,onSuccess:Function.prototype},e={area:[16384,14188,11402,10836,11180,8192,4096,t.min],height:[8388607,32767,16384,8192,4096,t.min],width:[4194303,32767,16384,8192,4096,t.min]};function i(t,e){var i=document?document.createElement("canvas"):null,s=i&&i.getContext?i.getContext("2d"):null,n=t-1,h=e-1;try{return i.width=t,i.height=e,s.fillRect(n,h,1,1),Boolean(s.getImageData(n,h,1,1).data[3])}catch(t){return!1}}function s(t){var e=t.sizes.shift(),n=e[0],h=e[1];i(n,h)?t.onSuccess(n,h):(t.onError(n,h),t.sizes.length&&setTimeout((function(){s(t)}),0))}function n(e){var i=e.width===e.height,s=1===e.height,n=1===e.width,h=[];if(e.width&&e.height){for(var a=e.min||t.min,r=e.step||t.step,o=Math.max(e.width,e.height);o>a;){var g=i||s?o:1,m=i||n?o:1;h.push([g,m]),o-=r}h.push([a,a])}else e.sizes.forEach(t=>{var e=i||s?t:1,a=i||n?t:1;h.push([e,a])});return h}var h={maxArea(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},h=n({width:i.max,height:i.max,min:i.min,step:i.step,sizes:[...e.area]});s(Object.assign({},t,i,{sizes:h}))},maxHeight(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},h=n({width:1,height:i.max,min:i.min,step:i.step,sizes:[...e.height]});s(Object.assign({},t,i,{sizes:h}))},maxWidth(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},h=n({width:i.max,height:1,min:i.min,step:i.step,sizes:[...e.width]});s(Object.assign({},t,i,{sizes:h}))},test(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},t,e);if(!n.sizes.length)return i(n.width,n.height);n.sizes=[...e.sizes],s(n)}};export default h;
//# sourceMappingURL=canvas-size.esm.min.js.map
