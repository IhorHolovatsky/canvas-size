/*!
 * canvas-size
 * v1.0.4
 * https://github.com/jhildenbiddle/canvas-size
 * (c) 2015-2020 John Hildenbiddle <http://hildenbiddle.com>
 * MIT license
 */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t=t||self).canvasSize=e()}(this,(function(){"use strict";function t(){return(t=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t}).apply(this,arguments)}function e(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(t)))return;var n=[],r=!0,i=!1,o=void 0;try{for(var a,s=t[Symbol.iterator]();!(r=(a=s.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){i=!0,o=t}finally{try{r||null==s.return||s.return()}finally{if(i)throw o}}return n}(t,e)||r(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function n(t){return function(t){if(Array.isArray(t))return i(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||r(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(t,e){if(t){if("string"==typeof t)return i(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?i(t,e):void 0}}function i(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}var o,a,s,u,h=window&&window.HTMLCanvasElement;function c(t){if(!h)return!1;var n=e(t.sizes.shift(),2),r=n[0],i=n[1],f=[r-1,i-1,1,1],m=Date.now();s.width=r,s.height=i,u.fillRect.apply(u,f),o.width=1,o.height=1,a.drawImage(s,0-(r-1),0-(i-1));var d=Boolean(a.getImageData(0,0,1,1).data[3]),l=Date.now()-m;return d?t.onSuccess(r,i,l):(t.onError(r,i,l),t.sizes.length&&(window.requestAnimationFrame?window.requestAnimationFrame((function(){c(t)})):c(t))),d}function f(e){return new Promise((function(n,r){c(t({},e,{onError:function(t,n,i){e.onError&&e.onError(t,n,i),0===e.sizes.length&&r({width:t,height:n,benchmark:i})},onSuccess:function(t,r,i){e.onSuccess&&e.onSuccess(t,r,i),n({width:t,height:r,benchmark:i})}}))}))}h&&(o=document.createElement("canvas"),a=o.getContext("2d"),s=document.createElement("canvas"),u=s.getContext("2d"));var m={max:null,min:1,sizes:[],step:1024,usePromise:!1,onError:Function.prototype,onSuccess:Function.prototype},d={area:[32767,16384,14188,11402,10836,11180,8192,4096,m.min],height:[8388607,65535,32767,16384,8192,4096,m.min],width:[4194303,65535,32767,16384,8192,4096,m.min]};function l(t){var e=t.width===t.height,n=1===t.height,r=1===t.width,i=[];if(t.width&&t.height)for(var o=t.min||m.min,a=t.step||m.step,s=Math.max(t.width,t.height);s>=o;){var u=e||n?s:1,h=e||r?s:1;i.push([u,h]),s-=a}else t.sizes.forEach((function(t){var o=e||n?t:1,a=e||r?t:1;i.push([o,a])}));return i}return{maxArea:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=l({width:e.max,height:e.max,min:e.min,step:e.step,sizes:n(d.area)}),i=t({},m,e,{sizes:r});if(i.usePromise)return f(i);c(i)},maxHeight:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=l({width:1,height:e.max,min:e.min,step:e.step,sizes:n(d.height)}),i=t({},m,e,{sizes:r});if(i.usePromise)return f(i);c(i)},maxWidth:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=l({width:e.max,height:1,min:e.min,step:e.step,sizes:n(d.width)}),i=t({},m,e,{sizes:r});if(i.usePromise)return f(i);c(i)},test:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=t({},m,e);return r.sizes=n(r.sizes),r.width&&r.height&&(r.sizes=[[r.width,r.height]]),r.usePromise?f(r):c(r)}}}));
//# sourceMappingURL=canvas-size.min.js.map
